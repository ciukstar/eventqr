

document.getElementById(#{idFormUpcomingFilter}).addEventListener('submit', e => {
  e.preventDefault();
  
  const params = new URLSearchParams(new FormData(e.target, e.submitter));
  const url = `${e.target.action}?${params}`;
  
  fetch(url, {
    headers: {'Accept': 'application/json'}
  }).then(data => data.json()).then(function (events) {

    Array.from(e.target.elements['mine']).forEach(x => {
      x.classList.remove('fill');
      Array.from(x.querySelectorAll('i')).filter(x => !!x).forEach(x => { x.remove(); });
    });

    e.submitter.classList.add('fill');
    
    e.submitter.prepend((() => {
      const i = document.createElement('i');
      i.textContent = 'done';
      return i;
    }) ());
    
    const eventList = document.getElementById(#{idNavEventList});
    
    if (events.length > 0) {

      eventList.replaceChildren( ... events.flatMap(([x,attendees,[hours,minutes]]) => {
        const item = document.createElement('a');
        item.href = `/events/${x.id}`;
        item.className = 'row padding surface-container wave';

        item.appendChild((() => {
          const start = document.createElement('img');
          start.className = 'large round';
          start.setAttribute('src',`/events/${x.id}/poster`);
          start.setAttribute('loading','lazy');
          start.setAttribute('alt',#{msgr MsgPoster});
          return start;
        }) ());
        
        item.appendChild((() => {
          const content = document.createElement('div');
          content.className = 'content max';

          content.appendChild((() => {
            const headline = document.createElement('h6');
            headline.className = 'headline large-text';
            headline.textContent = x.name;
            return headline;
          }) ());

          content.appendChild((() => {
            const supporting = document.createElement('time');
            supporting.className = 'full-datetime supporting-text small-text';
            supporting.datetime = x.time;
            supporting.textContent = new Date(x.time).toLocaleDateString(
              navigator.language,
              { year: 'numeric',
                month: 'short',
                weekday: 'short',
                day: 'numeric',
                hour: 'numeric',
                minute: 'numeric'
              }
            );
            return supporting;
          }) ());

          content.appendChild((() => {
            const supporting = document.createElement('div');
            supporting.className = 'supporting-text small-text text-with-icons';
            
            supporting.appendChild((() => {
              const span = document.createElement('span');
              span.title = #{msgr MsgDuration};

              span.appendChild((() => {
                const i = document.createElement('i');
                i.className = 'tiny secondary-text';
                i.textContent = 'hourglass_bottom';
                return i;
              }) ());

              span.appendChild((() => {
                const duration = document.createElement('span');
                duration.className = 'duration';
                duration.textContent = new Intl.DurationFormat(navigator.language, { style: 'narrow' }).format(
                  { hours: hours, minutes: minutes }
                );
                return duration;
              }) ());
              
              return span;
            }) ());
            
            supporting.appendChild((() => {
              const span = document.createElement('span');
              span.title = #{msgr MsgAttendees};
              
              span.appendChild((() => {
                const i = document.createElement('i');
                i.className = 'small secondary-text';
                i.textContent = 'groups';
                return i;
              }) ());
              
              span.appendChild((() => {
                const span = document.createElement('span');
                span.textContent = attendees;
                return span;
              }) ());
              
              return span;
            }) ());
            
            return supporting;
          }) ());

          return content;
        }) ());
        
        item.appendChild((() => {
          const end = document.createElement('i');
          end.textContent = 'arrow_forward_ios';
          return end;
        }) ());

        const divider = document.createElement('hr');
        return [item,divider];

      }));

    } else {

      eventList.replaceChildren((() => {
        const msg = document.createElement('div');
        msg.className = 'italic padding';
        msg.textContent = #{msgr MsgNoEventsFound};
        return msg;
      })());

    }

    history.replaceState(null,"",url);
    
  });
});


document.getElementById(#{idFormSearhFilter}).addEventListener('submit', function (e) {
  e.preventDefault();
  
  const listSearch = document.getElementById(#{idNavSearchEventsResult});
  listSearch.replaceChildren(progress());

  const params = new URLSearchParams(new FormData(e.target, e.submitter));
  const url = `${e.target.action}?${params}`;
  
  fetch(url,{
    headers: {'Accept': 'application/json'}
  }).then(data => data.json()).then(function (events) {

    Array.from(e.target.elements['mine']).forEach(x => {
      x.classList.remove('fill');
      Array.from(x.querySelectorAll('i')).filter(x => !!x).forEach(x => { x.remove(); });
    });

    e.submitter.classList.add('fill');
    
    e.submitter.prepend((() => {
      const i = document.createElement('i');
      i.textContent = 'done';
      return i;
    }) ());

    if (events.length > 0) {

      listSearch.replaceChildren( ... events.flatMap(([x,attendees,[hours,minutes]]) => {
        const item = document.createElement('a');
        item.href = `/events/${x.id}`;
        item.className = 'row padding surface-container wave';
        
        item.appendChild((() => {
          const start = document.createElement('img');
          start.className = 'large round';
          start.setAttribute('src',`/events/${x.id}/poster`);
          start.setAttribute('loading','lazy');
          start.setAttribute('alt',#{msgr MsgPoster});
          return start;
        }) ());


        item.appendChild((() => {

          const content = document.createElement('div');
          content.className = 'content max';
          
          content.appendChild((() => {
            const headline = document.createElement('h6');
            headline.className = 'headline large-text';
            headline.textContent = x.name;
            return headline;
          }) ());

          content.appendChild((() => {
            const supporting = document.createElement('time');
            supporting.className = 'full-datetime supporting-text small-text';
            supporting.datetime = x.time;
            supporting.textContent = new Date(x.time).toLocaleDateString(
              navigator.language,
              { year: 'numeric',
                month: 'short',
                weekday: 'short',
                day: 'numeric',
                hour: 'numeric',
                minute: 'numeric'
              }
            );
            return supporting;
          }) ());

          content.appendChild((() => {
            const supporting = document.createElement('div');
            supporting.className = 'supporting-text small-text text-with-icons';
            
            supporting.appendChild((() => {
              const span = document.createElement('span');
              span.title = #{msgr MsgDuration};

              span.appendChild((() => {
                const i = document.createElement('i');
                i.className = 'tiny secondary-text';
                i.textContent = 'hourglass_bottom';
                return i;
              }) ());

              span.appendChild((() => {
                const duration = document.createElement('span');
                duration.className = 'duration';
                duration.textContent = new Intl.DurationFormat(navigator.language, { style: 'narrow' }).format(
                  { hours: hours, minutes: minutes }
                );
                return duration;
              }) ());
              
              return span;
            }) ());
            
            supporting.appendChild((() => {
              const span = document.createElement('span');
              span.title = #{msgr MsgAttendees};
              
              span.appendChild((() => {
                const i = document.createElement('i');
                i.className = 'small secondary-text';
                i.textContent = 'groups';
                return i;
              }) ());
              
              span.appendChild((() => {
                const span = document.createElement('span');
                span.textContent = attendees;
                return span;
              }) ());
              
              return span;
            }) ());
            
            return supporting;
          }) ())
          
          return content;
          
        }) ());
        
        item.appendChild((() => {
          const end = document.createElement('i');
          end.textContent = 'arrow_forward_ios';
          return end;
        }) ());

        const divider = document.createElement('hr');
        return [item,divider];

      }));

    } else {

      listSearch.replaceChildren((() => {
        const msg = document.createElement('div');
        msg.className = 'italic padding';
        msg.textContent = #{msgr MsgNoEventsFound};
        return msg;
      })());

    }

    history.replaceState(null,"",`${new URL(window.location.href).pathname}?${params}`);

  });
  
});
