
Array.from(
  document.querySelectorAll('time.full-datetime[datetime]')
).forEach(function (x) {
  x.textContent = new Date(x.getAttribute('datetime')).toLocaleDateString(
    navigator.language,
    { year: 'numeric',
      month: 'short',
      weekday: 'short',
      day: 'numeric',
      hour: 'numeric',
      minute: 'numeric'
    }
  );
});

Array.from(
  document.querySelectorAll('time.day[datetime]')
).forEach(function (x) {
  x.textContent = new Date(x.getAttribute('datetime')).toLocaleDateString(
    navigator.language,
    { year: 'numeric',
      month: 'short',
      day: 'numeric'
    }
  );
});

Array.from(
  document.querySelectorAll('.duration[data-hours][data-minutes]')
).forEach(function (x) {
  x.textContent = new Intl.DurationFormat(navigator.language, { style: 'narrow' }).format(
    { hours: x.dataset.hours, minutes: x.dataset.minutes }
  );
});


document.getElementById(#{idDetailsMyCards}).addEventListener('toggle', e => {
  e.target.querySelector('summary > i').textContent = e.target.open ? 'expand_less' : 'expand_more';
});


document.getElementById(#{idButtonUpcomingEvents}).addEventListener('click', e => {
  e.preventDefault();
  document.getElementById(#{idOverlay}).classList.add('active');
  document.getElementById(#{idDialogUpcomingEvents}).show();
});

document.getElementById(#{idButtonCloseDialogUpcomingEvents}).addEventListener('click', e => {
  document.getElementById(#{idOverlay}).classList.remove('active');
  document.getElementById(#{idDialogUpcomingEvents}).close();
});


document.getElementById(#{idButtonSearchEvents}).addEventListener('click', e => {
  e.preventDefault();
  document.getElementById(#{idOverlay}).classList.add('active');
  document.getElementById(#{idDialogSearchEvents}).show();
});

document.getElementById(#{idButtonCloseDialogSearchEvents}).addEventListener('click', e => {
  document.getElementById(#{idOverlay}).classList.remove('active');
  document.getElementById(#{idDialogSearchEvents}).close();
});


const searchSheet = document.getElementById(#{idDialogSearchEvents});
const listSearch = document.getElementById(#{idNavSearchEventsResult});


document.getElementById(#{idInputSearchEvents}).addEventListener('input', debounce( function (e) {

  listSearch.replaceChildren(progress());

  const params = new URL(window.location).searchParams;
  params.set('q', e.target.value);
  
  fetch(new URL(`@{ApiEventsR}?${params}`).href,{
    headers: {'Accept': 'application/json'}
  }).then(data => data.json()).then(function (events) {

    if (events.length > 0) {

      listSearch.replaceChildren( ... events.flatMap(([x,attendees]) => {
        const item = document.createElement('a');
        item.href = `/events/${x.id}`;
        item.className = 'row padding surface-container wave';
        
        item.appendChild((() => {
          const start = document.createElement('img');
          start.className = 'large round';
          start.setAttribute('src',`/events/${x.id}/poster`);
          start.setAttribute('loading','lazy');
          start.setAttribute('alt',#{msgr MsgPoster});
          return start;
        }) ());


        item.appendChild((() => {

          const content = document.createElement('div');
          content.className = 'content max';
          
          content.appendChild((() => {
            const headline = document.createElement('h6');
            headline.className = 'headline large-text';
            headline.textContent = x.name;
            return headline;
          }) ());

          content.appendChild((() => {
            const supporting = document.createElement('time');
            supporting.className = 'full-datetime supporting-text small-text';
            supporting.datetime = x.time;
            supporting.textContent = new Date(x.time).toLocaleDateString(
              navigator.language,
              { year: 'numeric',
                month: 'short',
                weekday: 'short',
                day: 'numeric',
                hour: 'numeric',
                minute: 'numeric'
              }
            );
            return supporting;
          }) ());
          
          content.appendChild((() => {
            const supporting = document.createElement('div');
            supporting.className = 'supporting-text small-text';
            supporting.textContent = `#{rawJS $ msgr MsgAttendees}: ${attendees}`;
            return supporting;
          }) ());
          
          return content;
          
        }) ());
        
        item.appendChild((() => {
          const end = document.createElement('i');
          end.textContent = 'arrow_forward_ios';
          return end;
        }) ());

        const divider = document.createElement('hr');
        return [item,divider];

      }));

    } else {

      listSearch.replaceChildren((() => {
        const msg = document.createElement('div');
        msg.className = 'italic padding';
        msg.textContent = #{msgr MsgNoEventsFound};
        return msg;
      })());

    }

  });
  
}, 500));


[ [#{idDialogSearchEvents}, #{idNavSearchEventsResult}]
].map(
  xs => xs.map(x => document.getElementById(x))
).map(
  ([dlg,list]) => [dlg,list,dlg.querySelector('[draggable=true]')]
).forEach(([sheet,list,draggable]) => {

  draggable.addEventListener('dragstart', e => {
    e.preventDefault();
    e.stopPropagation();
  });

  draggable.addEventListener('drag', e => {
    const h = `${window.innerHeight - e.clientY + 32}px`;
    list.style.height = `calc(${h}  - (3.5rem + 6rem))`;
    e.preventDefault();
    e.stopPropagation();
  });

  draggable.addEventListener('dragend', e => {
    const h = `${window.innerHeight - e.clientY + 32}px`;
    list.style.height = `calc(${h} - (3.5rem + 6rem))`;
    e.preventDefault();
    e.stopPropagation();
  });

  draggable.addEventListener('touchstart', e => {
    e.preventDefault();
    e.stopPropagation();
  });

  draggable.addEventListener('touchmove', e => {
    const h = `${window.innerHeight - e.touches.item(0).clientY + 32}px`;
    list.style.height = `calc(${h} - (3.5rem + 6rem))`;
    e.preventDefault();
    e.stopPropagation();
  });

});
